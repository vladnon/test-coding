Для вычислений нотации О большого необходимо взять наибольший член и отбросить константы, потому что он будет влиять больше всего на вернхнюю 
границу. А так как эта нотация нацелена на вычисления сложности алгоритма при больших размерах данных, то константы не будут так сильно влиять.

Первое время
f(n) = c
Эта функция возрастает без влияния n, соотвестно она будет называться константной O(1).
Такая сложность называется постоянного времени. Это не означает, что размер данных(n) никак не влияет не время выполнение, это значит
что n не влияет на вернюю его границу.

Лографмичное время
f(n) = log2(n)
Основание 2 выходит из того, что компьютер в основном работает с двоичной системой.
Сложость записывается как O(log(n))

Линейное время
f(n) = n
Ну тут все просто, время пропорционально размеру входных данных, ну или просто перебор. O(n)

Линейно-Лографмичное время
f(n) = log(n)
Такие алгоритмы постоянно разделяют задачу на половину, а потом используют алгоритм линейного времени.
O(n log(n))

Полимиальное время
O(n**k) одним из подвидов является O(n**2). С таким временем работают квадратичные сортировки.

Экспоненциальное время
O(c**n)

Факториальное время
Нужно тогда, когда необходимо перебрать все комбинации 
O(n!)